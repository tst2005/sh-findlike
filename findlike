#!/bin/sh

# POSIX Shell function to implement mininal find-like command

# Difference with find behavior :
# * does not follow dot-named item (like: find ! -name '.*' ) EDIT: it now follow hidden files


# Useful for :
# * call a shell function (find use subprocess, can not call defined function)
# * detecting deadlink and more ...

# ! not exists (or permission denied)
# f file
# d directory
# s socket
# p pipe (FIFO)
# b block special file
# c character special file
# U unknown
# lX symlink of type X
# l! dead [sym]link
# lf symlink to file
# ld symlink to directory

# pfind() <callback> [<directory> [<directories ...>]]
pfind() {
	local hand="$1";shift
	local level=${level:-0} # usefull in case of MINDEPTH=0
	local status=0
	if [ $# -eq 0 ]; then
		pfind "$hand" . || status=1
		return $status
	elif [ $# -gt 1 ] ;then
		for item in "$@"; do
			pfind "$hand" "$item" || status=1
		done
		return $status
	fi
	local item="$1"
	local type1=''
	if [ -h "$item" ]; then
		type1='l'
	elif [ ! -e "$item" ]; then
		return 1
	elif [ -d "$item" ]; then
		if "$hand" 'd' "$item" && \
		[ -r "$item/" ]; then
			level=$(( ${level:-0} + 1))
			for childitem in "$item"/*; do
				case "$childitem" in
					*/.|*/..) continue ;;
				esac
				pfind "$hand" "$childitem" || status=1
			done
			for childitem in "$item"/.*; do
				case "$childitem" in
					*/.|*/..) continue ;;
				esac
				pfind "$hand" "$childitem" || status=1
			done
			level=$(( ${level:-0} - 1))
		fi
		return $status
	fi
	local type='U'
	if [ ! -e "$item" ]; then type='!';
	elif [ -f "$item" ]; then type='f';
	elif [ -d "$item" ]; then type='d';
	elif [ -S "$item" ]; then type='s';
	elif [ -p "$item" ]; then type='p';
	elif [ -b "$item" ]; then type='b';
	elif [ -c "$item" ]; then type='c';
	fi
	"$hand" "$type1$type" "$item" || status=1
	return $status
}

mindepth() {
	if [ ${level:-0} -ge ${MINDEPTH:-0} ]; then
		return 1
	fi
	return 0
}

maxdepth() {
	if [ -n "${MAXDEPTH:-}" ] && [ ${level:-0} -gt ${MAXDEPTH} ]; then
		return 1
	fi
	return 0
}

showall() {
	maxdepth || return 1
	mindepth || echo "$1 $2 (${level:-0})"
	if [ "$1" = "d" ] && [ ! -r "$2" ]; then return 1; fi
	return 0
}

showdeadlink() {
	maxdepth || return 1
	if [ "$1" = "l!" ]; then
		mindepth || echo "$2"
	fi
}
showfile() {
	maxdepth || return 1
	case "$1" in
		f|lf)
			mindepth 1 || echo "${level:-0} $2" ;;
	esac
}
showdir() {
	maxdepth || return 1
	case "$1" in
		d|ld)
			mindepth 1 || echo "${level} $2" ;;
	esac
}

if [ $# -eq 0 ]; then
	echo "Usage: $0 <showfile|showdir|showall|showdeadlink> [directories...]"
	exit 1
fi
pfind "$@"
